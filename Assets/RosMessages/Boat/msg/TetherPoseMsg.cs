//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Boat
{
    [Serializable]
    public class TetherPoseMsg : Message
    {
        public const string k_RosMessageName = "boat_msgs/TetherPose";
        public override string RosMessageName => k_RosMessageName;

        public Std.HeaderMsg header;
        public Geometry.PointMsg[] positions;
        public int segments;
        public float length;

        public TetherPoseMsg()
        {
            this.header = new Std.HeaderMsg();
            this.positions = new Geometry.PointMsg[0];
            this.segments = 0;
            this.length = 0.0f;
        }

        public TetherPoseMsg(Std.HeaderMsg header, Geometry.PointMsg[] positions, int segments, float length)
        {
            this.header = header;
            this.positions = positions;
            this.segments = segments;
            this.length = length;
        }

        public static TetherPoseMsg Deserialize(MessageDeserializer deserializer) => new TetherPoseMsg(deserializer);

        private TetherPoseMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.positions, Geometry.PointMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.segments);
            deserializer.Read(out this.length);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.positions);
            serializer.Write(this.positions);
            serializer.Write(this.segments);
            serializer.Write(this.length);
        }

        public override string ToString()
        {
            return "TetherPoseMsg: " +
            "\nheader: " + header.ToString() +
            "\npositions: " + System.String.Join(", ", positions.ToList()) +
            "\nsegments: " + segments.ToString() +
            "\nlength: " + length.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
